* Personnage
** service : Personnage
** use : Objet
** types : String, int, boolean


** observators :
**** const nom : [Personnage] → String
**** const largeur : [Personnage] → int
**** const hauteur : [Personnage] → int
**** const profondeur : [Personnage] → int
**** const force : [Personnage] → int
**** pointsDeVie : [Personnage] → int
**** sommeArgent : [Personnage] → int
**** estVaincu : [Personnage] → boolean
**** estEquipe : [Personnage] → boolean
**** laChoseEquipee : [Personnage] → Objet
***** pre laChoseEquipee(P) require estEquipe(P)

** Constructors :
**** init : String × int × int × int × int x int → [Personnage]
***** pre init(nom,largeur,hauteur,profondeur,force,pointsVie) require nom ≠ "" ∧ largeur > 0 ∧ hauteur > 0 ∧ profondeur > 0 ∧ 0 < force < pointsVie


** Operators :
**** retraitPdv : [Personnage] × int → [Personnage]
***** pre retraitPdv(P,s) require ¬estVaincu(P) ∧ s > 0
**** depotPdv : [Personnage] × int → [Personnage]
***** pre depotPdv(P,s) require ¬estVaincu(P) ∧ s > 0

**** retraitArgent : [Personnage] × int → [Personnage]
***** pre retraitArgent(P,s) require ¬estVaincu(P) ∧ s > 0 ∧ s < sommeArgent(P)
**** depotArgent : [Personnage] × int → [Personnage]
***** pre depotArgent(P,s) require ¬estVaincu(P) ∧ s > 0

**** ramasser : [Personnage] × Objet → [Personnage]
***** pre ramasser(P,o) require ¬estVaincu(P) ∧ ¬estEquipe(P)
**** jeter : [Personnage]  → [Personnage]
***** pre jeter(P) require ¬estVaincu(P) ∧ estEquipe(P)


** Observations :
*** [invariants]
**** estVaincu(P) =(min) pointsDeVie(P) ≤ 0

*** [init]
**** nom(init(n,l,h,p,f,pv)) = n
**** largeur(init(n,l,h,p,f,pv)) = l
**** hauteur(init(n,l,h,p,f,pv)) = h
**** profondeur(init(n,l,h,p,f,pv)) = p
**** force(init(n,l,h,p,f,pv)) = f
**** pointsDeVie(init(n,l,h,p,f,pv)) = pv
**** sommeArgent(init(n,l,h,p,f,pv)) = 0
**** estEquipe(init(n,l,h,p,f,pv)) = false


*** [retraitPdv]
**** pointsDeVie(retraitPdv(P,s)) = pointsDeVie(P) - s
**** sommeArgent(retraitPdv(P,s)) = sommeArgent(P)
**** estEquipe(retraitPdv(P,s)) = estEquipe(P)
**** laChoseEquipee(retraitPdv(P,s)) = laChoseEquipee(P)

*** [depotPdv]
**** pointsDeVie(depotPdv(P,s)) = pointsDeVie(P) + s
**** sommeArgent(depotPdv(P,s)) = sommeArgent(P)
**** estEquipe(depotPdv(P,s)) = estEquipe(P)
**** laChoseEquipee(depotPdv(P,s)) = laChoseEquipee(P)

*** [retraitArgent]
**** sommeArgent(retraitArgent(P,s)) = sommeArgent(P) - s
**** pointsDeVie(retraitArgent(P,s)) = pointsDeVie(P)
**** estEquipe(retraitArgent(P,s)) = estEquipe(P)
**** laChoseEquipee(retraitArgent(P,s)) = laChoseEquipee(P)

*** [depotArgent]
**** sommeArgent(depotArgent(P,s)) = sommeArgent(P) + s
**** pointsDeVie(depotArgent(P,s)) = pointsDeVie(P)
**** estEquipe(depotArgent(P,s)) = estEquipe(P)
**** laChoseEquipee(depotArgent(P,s)) = laChoseEquipee(P)

*** [ramasser]
**** estEquipe(ramasser(P,o)) = true
**** laChoseEquipee(ramasser(P,o)) = o
**** sommeArgent(ramasser(P,o)) = sommeArgent(P)
**** pointsDeVie(ramasser(P,o)) = pointsDeVie(P)

*** [jeter]
**** estEquipe(jeter(P)) = false
**** sommeArgent(jeter(P)) = sommeArgent(P)
**** pointsDeVie(jeter(P)) = pointsDeVie(P)


 
      
