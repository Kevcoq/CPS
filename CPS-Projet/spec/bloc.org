* Bloc
** service : Bloc
** use : Objet
** types : int, boolean, enum TYPE_Bloc {VIDE, FOSSE}, enum TYPE_Tresor {RIEN, DIXDOLLAR, CINQDOLLAR, CHAINEVELO, POUBELLEMETALLIQUE}

** observators :
**** const largeur : → int
**** const hauteur : → int
**** const profondeur : → int
**** const typeBloc : [Bloc]  → TYPE_Bloc
**** aTresor : [Bloc]  → boolean
**** typeTresor : [Bloc]  → TYPE_Tresor
***** pre typeTresor(B) require aTresor(B)

** Constructors :
**** init : TYPE_Bloc × TYPE_Tresor → [Bloc]
**** init : TYPE_Bloc → [Bloc]

** Operators :
**** ramasser-tresor : [Bloc] → Objet
***** pre ramasser-tresor(B) require aTresor(B)

**** deposer-tresor : [Bloc] × Objet → [Bloc]
***** pre deposer-tresor(B,o) require ¬aTresor(B)


** Observations : 
*** [invariants]
**** aTresor(B) =(min) typeTresor ≠ TYPE_Tresor.RIEN

*** [init]
**** largeur(init(b,t)) = 10
**** largeur(init(b)) = 10

**** hauteur(init(b,t)) = 10
**** hauteur(init(b)) = 10

**** profondeur(init(b,t)) = 10
**** profondeur(init(b)) = 10

**** typeBloc(init(b,t)) = b
**** typeBloc(init(b)) = b

**** typeTresor(init(b,t)) = t
**** typeTresor(init(b)) = TYPE_Tresor.RIEN

*** [ramasser-tresor]
**** typeTresor(ramasser-tresor(B)) = TYPE_Tresor.RIEN

*** [deposer-tresor]
**** typeTresor(deposer-tresor(B,t)) = Objet::type(t)

